# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  workflow_dispatch:

jobs:
  test: 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    - run: npm ci
    - run: npm run test:unit
  
  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    - name: Clean Install Dependencies
      run: npm ci
    - name: Build Project
      run: npm run build --if-present
    - name: Archive build artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist-after-build
        path: dist
    
  deploy: 
    needs: [build]
    name: Upload to Amazon S3
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: dist-after-build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: us-east-1


    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 sync ./dist s3://meallistapp --delete
    
    - name: Invalidate Cloudfront cache to update website
      run: |
        aws cloudfront create-invalidation |
          --distribution-id ${{secrets.DISTRO_ID}} |
          --paths "/*"
